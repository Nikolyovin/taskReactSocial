{"ast":null,"code":"var _jsxFileName = \"/home/niko/projects/01-first-project/my-app/src/companents/Users/Users.jsx\";\nimport * as axios from \"axios\";\nimport React from \"react\";\nimport s from './Users.module.css';\nimport userPhoto from '../../assets/images/images.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet Users = props => {\n  let getUsers = () => {\n    if (props.users.length === 0) {\n      axios.get(\"https://social-network.samuraijs.com/api/1.0/users\").then(response => {\n        //отправляем get запрос на сервак .then(response(когда запрос выполниться пишем логигки что нужно сделать)\n        props.setUsers(response.data.items); //это наш массив пользователей который отдает нам сервак\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.users_wrap,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getUsers,\n      children: \"Get Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 10\n    }, this), props.users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.users_items,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: user.photos.small != null ? user.photos.small : userPhoto,\n          className: s.userPhoto\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.user_items_data,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: user.followed ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              props.unfollow(user.id);\n            },\n            children: \"Follow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 30\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              props.follow(user.id);\n            },\n            children: \"Unfollow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 30\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: user.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: 'user.location.country'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: 'user.location.city'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 19\n      }, this)]\n    }, user.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 35\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 7\n  }, this);\n};\n\n_c = Users;\nexport default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["/home/niko/projects/01-first-project/my-app/src/companents/Users/Users.jsx"],"names":["axios","React","s","userPhoto","Users","props","getUsers","users","length","get","then","response","setUsers","data","items","users_wrap","map","user","users_items","photos","small","user_items_data","followed","unfollow","id","follow","name","status"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,oBAAd;AACA,OAAOC,SAAP,MAAsB,gCAAtB;;;AAEA,IAAIC,KAAK,GAAEC,KAAD,IAAS;AAEhB,MAAIC,QAAQ,GAAC,MAAI;AACd,QAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,KAAqB,CAAxB,EAA0B;AACvBR,MAAAA,KAAK,CAACS,GAAN,CAAU,oDAAV,EAAgEC,IAAhE,CAAqEC,QAAQ,IAAE;AAAS;AACxFN,QAAAA,KAAK,CAACO,QAAN,CAAeD,QAAQ,CAACE,IAAT,CAAcC,KAA7B,EAD+E,CACT;AACrE,OAFD;AAGF;AAGH,GARD;;AAUA,sBACG;AAAK,IAAA,SAAS,EAAEZ,CAAC,CAACa,UAAlB;AAAA,4BACG;AAAQ,MAAA,OAAO,EAAET,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,EAGMD,KAAK,CAACE,KAAN,CAAYS,GAAZ,CAAgBC,IAAI,iBAAE;AAAmB,MAAA,SAAS,EAAEf,CAAC,CAACgB,WAAhC;AAAA,8BAEhB;AAAA,+BACG;AAAK,UAAA,GAAG,EAAED,IAAI,CAACE,MAAL,CAAYC,KAAZ,IAAoB,IAApB,GAA2BH,IAAI,CAACE,MAAL,CAAYC,KAAvC,GAA8CjB,SAAxD;AAAmE,UAAA,SAAS,EAAED,CAAC,CAACC;AAAhF;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,cAFgB,eAMhB;AAAK,QAAA,SAAS,EAAED,CAAC,CAACmB,eAAlB;AAAA,gCACG;AAAA,oBACIJ,IAAI,CAACK,QAAL,gBACI;AAAQ,YAAA,OAAO,EAAE,MAAI;AAACjB,cAAAA,KAAK,CAACkB,QAAN,CAAeN,IAAI,CAACO,EAApB;AAAwB,aAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,gBAEI;AAAQ,YAAA,OAAO,EAAE,MAAI;AAACnB,cAAAA,KAAK,CAACoB,MAAN,CAAaR,IAAI,CAACO,EAAlB;AAAsB,aAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHR;AAAA;AAAA;AAAA;AAAA,gBADH,eAOG;AAAA,oBACIP,IAAI,CAACS;AADT;AAAA;AAAA;AAAA;AAAA,gBAPH,eAUG;AAAA,oBACIT,IAAI,CAACU;AADT;AAAA;AAAA;AAAA;AAAA,gBAVH,eAeG;AAAA,oBACI;AADJ;AAAA;AAAA;AAAA;AAAA,gBAfH,eAkBG;AAAA,oBACI;AADJ;AAAA;AAAA;AAAA;AAAA,gBAlBH;AAAA;AAAA;AAAA;AAAA;AAAA,cANgB;AAAA,OAAUV,IAAI,CAACO,EAAf;AAAA;AAAA;AAAA;AAAA,YAAtB,CAHN;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAsCF,CAlDD;;KAAIpB,K;AAoDJ,eAAeA,KAAf","sourcesContent":["import * as axios from \"axios\";\r\nimport React from \"react\";\r\nimport s from './Users.module.css'\r\nimport userPhoto from '../../assets/images/images.png'\r\n\r\nlet Users=(props)=>{\r\n   \r\n   let getUsers=()=>{\r\n      if(props.users.length===0){\r\n         axios.get(\"https://social-network.samuraijs.com/api/1.0/users\").then(response=>{        //отправляем get запрос на сервак .then(response(когда запрос выполниться пишем логигки что нужно сделать)\r\n         props.setUsers(response.data.items)                                   //это наш массив пользователей который отдает нам сервак\r\n         })\r\n      }\r\n\r\n     \r\n   }\r\n\r\n   return (\r\n      <div className={s.users_wrap}>\r\n         <button onClick={getUsers}>Get Users</button>\r\n         {\r\n            props.users.map(user=><div key={user.id} className={s.users_items}>\r\n               \r\n                  <div>\r\n                     <img src={user.photos.small !=null ? user.photos.small: userPhoto} className={s.userPhoto}/> \r\n                  </div>  \r\n\r\n                  <div className={s.user_items_data}>\r\n                     <div>\r\n                        {user.followed\r\n                           ? <button onClick={()=>{props.unfollow(user.id)}}>Follow</button>\r\n                           : <button onClick={()=>{props.follow(user.id)}}>Unfollow</button>}\r\n                     </div>\r\n                  \r\n                     <div>\r\n                        {user.name}   \r\n                     </div>\r\n                     <div>\r\n                        {user.status}   \r\n                     </div>\r\n                  \r\n                  \r\n                     <div>\r\n                        {'user.location.country'}   \r\n                     </div>\r\n                     <div>\r\n                        {'user.location.city'}   \r\n                     </div>\r\n                  </div>\r\n               \r\n            </div>\r\n            )\r\n         }\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Users"]},"metadata":{},"sourceType":"module"}