{"ast":null,"code":"import React from 'react';\nimport { connect } from 'react-redux';\nimport { addMessageActionCreator, updateNewMessageTextActionCreator } from '../../redux/dialogs-reducer';\nimport Dialogs from './Dialogs';\n\nlet mapStateToProps = state => {\n  //функция редаксовская\n  return {\n    dialogsPage: state.dialogsPage //даем доступ в стейт\n\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  //доступ в диспатч и передаем в пропсы\n  return {\n    updateNewMessageText: text => {\n      dispatch(updateNewMessageTextActionCreator(text));\n    },\n    sendMessage: () => {\n      dispatch(addMessageActionCreator());\n    }\n  };\n};\n\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs); //указываем Dialogs, чтобы создать для него контейнерную компоненту и в скобках передаем функции которые потом войдут в пропсы\n\nexport default DialogsContainer;","map":{"version":3,"sources":["/home/niko/projects/01-first-project/my-app/src/companents/Dialogs/DialogsContainer.jsx"],"names":["React","connect","addMessageActionCreator","updateNewMessageTextActionCreator","Dialogs","mapStateToProps","state","dialogsPage","mapDispatchToProps","dispatch","updateNewMessageText","text","sendMessage","DialogsContainer"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,uBAAT,EAAkCC,iCAAlC,QAA2E,6BAA3E;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAGA,IAAIC,eAAe,GAAEC,KAAD,IAAS;AAAsC;AAChE,SAAM;AACHC,IAAAA,WAAW,EAACD,KAAK,CAACC,WADf,CAC0D;;AAD1D,GAAN;AAGF,CAJD;;AAMA,IAAIC,kBAAkB,GAAEC,QAAD,IAAY;AAAgC;AAChE,SAAO;AACJC,IAAAA,oBAAoB,EAAEC,IAAD,IAAQ;AAC1BF,MAAAA,QAAQ,CAACN,iCAAiC,CAACQ,IAAD,CAAlC,CAAR;AACF,KAHG;AAIJC,IAAAA,WAAW,EAAC,MAAI;AACbH,MAAAA,QAAQ,CAACP,uBAAuB,EAAxB,CAAR;AACF;AANG,GAAP;AAQF,CATD;;AAWA,MAAMW,gBAAgB,GAACZ,OAAO,CAACI,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CJ,OAA7C,CAAvB,C,CAA+F;;AAE/F,eAAeS,gBAAf","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addMessageActionCreator, updateNewMessageTextActionCreator } from '../../redux/dialogs-reducer'\r\nimport Dialogs from './Dialogs'\r\n\r\n\r\nlet mapStateToProps=(state)=>{                                     //функция редаксовская\r\n   return{\r\n      dialogsPage:state.dialogsPage                                //даем доступ в стейт\r\n   }\r\n}\r\n\r\nlet mapDispatchToProps=(dispatch)=>{                               //доступ в диспатч и передаем в пропсы\r\n   return {\r\n      updateNewMessageText:(text)=>{\r\n         dispatch(updateNewMessageTextActionCreator(text))\r\n      },\r\n      sendMessage:()=>{\r\n         dispatch(addMessageActionCreator())\r\n      }\r\n   }\r\n}\r\n\r\nconst DialogsContainer=connect(mapStateToProps, mapDispatchToProps)(Dialogs)                   //указываем Dialogs, чтобы создать для него контейнерную компоненту и в скобках передаем функции которые потом войдут в пропсы\r\n\r\nexport default DialogsContainer"]},"metadata":{},"sourceType":"module"}