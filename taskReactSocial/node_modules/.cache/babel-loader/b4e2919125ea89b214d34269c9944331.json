{"ast":null,"code":"var _jsxFileName = \"D:\\\\USER\\\\#\\\\projects\\\\taskReactSocial\\\\taskReactSocial\\\\src\\\\companents\\\\Users\\\\UsersContainer.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { follow, setCurrentPage, setTotalUserCount, setUsers, toggaleIsFetching, unfollow } from \"../../redux/users-reducer\";\nimport * as axios from \"axios\";\nimport Users from \"./Users\";\nimport Preloader from \"../common/Preloader/Preloader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass UsersContainer extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.onPageChanged = pageNumber => {\n      this.props.toggaleIsFetching(true);\n      this.props.setCurrentPage(pageNumber);\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(response => {\n        //отправляем get запрос на сервак .then(response(когда запрос выполниться пишем логики что нужно сделать)\n        this.props.toggaleIsFetching(false);\n        this.props.setUsers(response.data.items);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.toggaleIsFetching(true); //иконка загрузки\n\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\n      //отправляем get запрос на сервак .then(response(когда запрос выполниться пишем логику что нужно сделать)\n      this.props.toggaleIsFetching(false);\n      this.props.setUsers(response.data.items); //это наш массив пользователей который отдает нам сервак\n\n      this.props.setTotalUserCount(response.data.totalCount);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.props.isFetching ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 34\n      }, this) : null, /*#__PURE__*/_jsxDEV(Users, {\n        totalUsersCount: this.props.totalUsersCount,\n        pageSize: this.props.pageSize,\n        currentPage: this.props.currentPage,\n        users: this.props.users,\n        onPageChanged: this.onPageChanged,\n        unfollow: this.props.unfollow,\n        follow: this.props.follow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nlet mapStateToProps = state => {\n  //берет весь state, а отдает через props тот о котором можно знать чистой функции\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUserCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n}; // let mapDispatchToProps = (dispatch) => {\n//   //через пропсы передаем эшкн, через экшнкреейтор\n//   return {\n//     follow: followAC,\n//     unfollow: unfollowAC,\n//     setUsers: setUsersAC,\n//     setCurrentPage: setCurrentPageAC,\n//     setTotalUserCount: setTotalUserCountAC,\n//     toggaleIsFetching: toggaleIsFetchingAC\n//   }\n// }\n\n\nexport default connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setUsers,\n  setCurrentPage,\n  setTotalUserCount,\n  toggaleIsFetching\n})(UsersContainer);","map":{"version":3,"names":["React","connect","follow","setCurrentPage","setTotalUserCount","setUsers","toggaleIsFetching","unfollow","axios","Users","Preloader","UsersContainer","Component","onPageChanged","pageNumber","props","get","pageSize","then","response","data","items","componentDidMount","currentPage","totalCount","render","isFetching","totalUsersCount","users","mapStateToProps","state","usersPage","totalUserCount"],"sources":["D:/USER/#/projects/taskReactSocial/taskReactSocial/src/companents/Users/UsersContainer.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  follow,\r\n  setCurrentPage,\r\n  setTotalUserCount,\r\n  setUsers,\r\n  toggaleIsFetching,\r\n  unfollow,\r\n} from \"../../redux/users-reducer\";\r\nimport * as axios from \"axios\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\nclass UsersContainer extends React.Component {\r\n  componentDidMount() {\r\n    this.props.toggaleIsFetching(true) //иконка загрузки\r\n    axios\r\n      .get(\r\n        `https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`\r\n      )\r\n      .then((response) => {\r\n        //отправляем get запрос на сервак .then(response(когда запрос выполниться пишем логику что нужно сделать)\r\n        this.props.toggaleIsFetching(false)\r\n        this.props.setUsers(response.data.items); //это наш массив пользователей который отдает нам сервак\r\n        this.props.setTotalUserCount(response.data.totalCount);\r\n      });\r\n  }\r\n\r\n  onPageChanged = (pageNumber) => {\r\n    this.props.toggaleIsFetching(true)\r\n    this.props.setCurrentPage(pageNumber);\r\n    axios\r\n      .get(\r\n        `https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`\r\n      )\r\n      .then((response) => {\r\n        //отправляем get запрос на сервак .then(response(когда запрос выполниться пишем логики что нужно сделать)\r\n        this.props.toggaleIsFetching(false)\r\n        this.props.setUsers(response.data.items);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.isFetching ? <Preloader /> : null}\r\n        <Users\r\n          totalUsersCount={this.props.totalUsersCount}\r\n          pageSize={this.props.pageSize}\r\n          currentPage={this.props.currentPage}\r\n          users={this.props.users}\r\n          onPageChanged={this.onPageChanged}\r\n          unfollow={this.props.unfollow}\r\n          follow={this.props.follow}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  //берет весь state, а отдает через props тот о котором можно знать чистой функции\r\n  return {\r\n    users: state.usersPage.users,\r\n    pageSize: state.usersPage.pageSize,\r\n    totalUsersCount: state.usersPage.totalUserCount,\r\n    currentPage: state.usersPage.currentPage,\r\n    isFetching: state.usersPage.isFetching,\r\n  };\r\n};\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n//   //через пропсы передаем эшкн, через экшнкреейтор\r\n//   return {\r\n//     follow: followAC,\r\n//     unfollow: unfollowAC,\r\n//     setUsers: setUsersAC,\r\n//     setCurrentPage: setCurrentPageAC,\r\n//     setTotalUserCount: setTotalUserCountAC,\r\n//     toggaleIsFetching: toggaleIsFetchingAC\r\n//   }\r\n// }\r\n\r\nexport default connect(mapStateToProps, { follow, unfollow, setUsers, setCurrentPage, setTotalUserCount, toggaleIsFetching })(UsersContainer);\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,MADF,EAEEC,cAFF,EAGEC,iBAHF,EAIEC,QAJF,EAKEC,iBALF,EAMEC,QANF,QAOO,2BAPP;AAQA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;;;;AAEA,MAAMC,cAAN,SAA6BX,KAAK,CAACY,SAAnC,CAA6C;EAAA;IAAA;;IAAA,KAe3CC,aAf2C,GAe1BC,UAAD,IAAgB;MAC9B,KAAKC,KAAL,CAAWT,iBAAX,CAA6B,IAA7B;MACA,KAAKS,KAAL,CAAWZ,cAAX,CAA0BW,UAA1B;MACAN,KAAK,CACFQ,GADH,CAEK,2DAA0DF,UAAW,UAAS,KAAKC,KAAL,CAAWE,QAAS,EAFvG,EAIGC,IAJH,CAISC,QAAD,IAAc;QAClB;QACA,KAAKJ,KAAL,CAAWT,iBAAX,CAA6B,KAA7B;QACA,KAAKS,KAAL,CAAWV,QAAX,CAAoBc,QAAQ,CAACC,IAAT,CAAcC,KAAlC;MACD,CARH;IASD,CA3B0C;EAAA;;EAC3CC,iBAAiB,GAAG;IAClB,KAAKP,KAAL,CAAWT,iBAAX,CAA6B,IAA7B,EADkB,CACiB;;IACnCE,KAAK,CACFQ,GADH,CAEK,2DAA0D,KAAKD,KAAL,CAAWQ,WAAY,UAAS,KAAKR,KAAL,CAAWE,QAAS,EAFnH,EAIGC,IAJH,CAISC,QAAD,IAAc;MAClB;MACA,KAAKJ,KAAL,CAAWT,iBAAX,CAA6B,KAA7B;MACA,KAAKS,KAAL,CAAWV,QAAX,CAAoBc,QAAQ,CAACC,IAAT,CAAcC,KAAlC,EAHkB,CAGwB;;MAC1C,KAAKN,KAAL,CAAWX,iBAAX,CAA6Be,QAAQ,CAACC,IAAT,CAAcI,UAA3C;IACD,CATH;EAUD;;EAgBDC,MAAM,GAAG;IACP,oBACE;MAAA,WACG,KAAKV,KAAL,CAAWW,UAAX,gBAAwB,QAAC,SAAD;QAAA;QAAA;QAAA;MAAA,QAAxB,GAAwC,IAD3C,eAEE,QAAC,KAAD;QACE,eAAe,EAAE,KAAKX,KAAL,CAAWY,eAD9B;QAEE,QAAQ,EAAE,KAAKZ,KAAL,CAAWE,QAFvB;QAGE,WAAW,EAAE,KAAKF,KAAL,CAAWQ,WAH1B;QAIE,KAAK,EAAE,KAAKR,KAAL,CAAWa,KAJpB;QAKE,aAAa,EAAE,KAAKf,aALtB;QAME,QAAQ,EAAE,KAAKE,KAAL,CAAWR,QANvB;QAOE,MAAM,EAAE,KAAKQ,KAAL,CAAWb;MAPrB;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA,gBADF;EAcD;;AA5C0C;;AA+C7C,IAAI2B,eAAe,GAAIC,KAAD,IAAW;EAC/B;EACA,OAAO;IACLF,KAAK,EAAEE,KAAK,CAACC,SAAN,CAAgBH,KADlB;IAELX,QAAQ,EAAEa,KAAK,CAACC,SAAN,CAAgBd,QAFrB;IAGLU,eAAe,EAAEG,KAAK,CAACC,SAAN,CAAgBC,cAH5B;IAILT,WAAW,EAAEO,KAAK,CAACC,SAAN,CAAgBR,WAJxB;IAKLG,UAAU,EAAEI,KAAK,CAACC,SAAN,CAAgBL;EALvB,CAAP;AAOD,CATD,C,CAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAezB,OAAO,CAAC4B,eAAD,EAAkB;EAAE3B,MAAF;EAAUK,QAAV;EAAoBF,QAApB;EAA8BF,cAA9B;EAA8CC,iBAA9C;EAAiEE;AAAjE,CAAlB,CAAP,CAA+GK,cAA/G,CAAf"},"metadata":{},"sourceType":"module"}