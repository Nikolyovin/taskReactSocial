{"ast":null,"code":"var _jsxFileName = \"/home/niko/projects/01-first-project/my-app/src/companents/Users/UsersApiComponents.jsx\";\nimport React from \"react\";\nimport * as axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UsersApiComponents extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.onPageChanged = pageNumber => {\n      this.props.setCurrentPage(pageNumber);\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(response => {\n        //отправляем get запрос на сервак .then(response(когда запрос выполниться пишем логики что нужно сделать)\n        this.props.setUsers(response.data.items);\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\n      //отправляем get запрос на сервак .then(response(когда запрос выполниться пишем логики что нужно сделать)\n      this.props.setUsers(response.data.items); //это наш массив пользователей который отдает нам сервак\n\n      this.props.setTotalUserCount(response.data.totalCount);\n    });\n  }\n\n  render() {\n    let pagesCount = Math.ceil(this.props.totalUsersCount / this.props.pageSize);\n    let pages = [];\n\n    for (let i = 1; i <= pagesCount; i++) {\n      pages.push(i);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Users, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default UsersApiComponents;","map":{"version":3,"sources":["/home/niko/projects/01-first-project/my-app/src/companents/Users/UsersApiComponents.jsx"],"names":["React","axios","UsersApiComponents","Component","onPageChanged","pageNumber","props","setCurrentPage","get","pageSize","then","response","setUsers","data","items","componentDidMount","currentPage","setTotalUserCount","totalCount","render","pagesCount","Math","ceil","totalUsersCount","pages","i","push"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;;AAEA,MAAMC,kBAAN,SAAkCF,KAAK,CAACG,SAAxC,CAAiD;AAAA;AAAA;;AAAA,SAQ9CC,aAR8C,GAQ7BC,UAAD,IAAgB;AAC7B,WAAKC,KAAL,CAAWC,cAAX,CAA0BF,UAA1B;AACAJ,MAAAA,KAAK,CAACO,GAAN,CAAW,2DAA2DH,UAAY,UAAU,KAAKC,KAAL,CAAWG,QAAU,EAAjH,EAAoHC,IAApH,CAAyHC,QAAQ,IAAE;AAAS;AAC5I,aAAKL,KAAL,CAAWM,QAAX,CAAoBD,QAAQ,CAACE,IAAT,CAAcC,KAAlC;AACC,OAFD;AAGF,KAb6C;AAAA;;AAC9CC,EAAAA,iBAAiB,GAAE;AAChBd,IAAAA,KAAK,CAACO,GAAN,CAAW,2DAA0D,KAAKF,KAAL,CAAWU,WAAY,UAAS,KAAKV,KAAL,CAAWG,QAAS,EAAzH,EAA4HC,IAA5H,CAAiIC,QAAQ,IAAE;AAAS;AACpJ,WAAKL,KAAL,CAAWM,QAAX,CAAoBD,QAAQ,CAACE,IAAT,CAAcC,KAAlC,EAD2I,CAChE;;AAC3E,WAAKR,KAAL,CAAWW,iBAAX,CAA6BN,QAAQ,CAACE,IAAT,CAAcK,UAA3C;AACF,KAHE;AAIF;;AASDC,EAAAA,MAAM,GAAE;AACL,QAAIC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAW,KAAKhB,KAAL,CAAWiB,eAAX,GAA6B,KAAKjB,KAAL,CAAWG,QAAnD,CAAjB;AACA,QAAIe,KAAK,GAAG,EAAZ;;AACA,SAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,IAAIL,UAAnB,EAA+BK,CAAC,EAAhC,EAAoC;AACjCD,MAAAA,KAAK,CAACE,IAAN,CAAWD,CAAX;AACF;;AAEH,wBAAO,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACA;;AAvB6C;;AA0BjD,eAAevB,kBAAf","sourcesContent":["import React from \"react\";\nimport * as axios from \"axios\";\n\nclass UsersApiComponents extends  React.Component{\n   componentDidMount(){\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response=>{        //отправляем get запрос на сервак .then(response(когда запрос выполниться пишем логики что нужно сделать)\n      this.props.setUsers(response.data.items)                                   //это наш массив пользователей который отдает нам сервак\n      this.props.setTotalUserCount(response.data.totalCount)  \n   })\n   }\n   \n   onPageChanged = (pageNumber) => {\n      this.props.setCurrentPage(pageNumber)\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${ pageNumber }&count=${ this.props.pageSize }`).then(response=>{        //отправляем get запрос на сервак .then(response(когда запрос выполниться пишем логики что нужно сделать)\n      this.props.setUsers(response.data.items) \n      })\n   }\n\n   render(){\n      let pagesCount = Math.ceil( this.props.totalUsersCount / this.props.pageSize)\n      let pages = []\n      for (let i=1; i <= pagesCount; i++) {\n         pages.push(i)\n      }\n\n    return <Users />\n   }\n}\n       \nexport default UsersApiComponents  "]},"metadata":{},"sourceType":"module"}