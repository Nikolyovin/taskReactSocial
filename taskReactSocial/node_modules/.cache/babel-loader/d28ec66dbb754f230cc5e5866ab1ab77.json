{"ast":null,"code":"import React from 'react';\nimport { addPostActionCreator, updateNewPostTextActionCreator } from '../../../redux/profile-reducer';\nimport MyPosts from './MyPosts';\nimport { connect } from 'react-redux';\n/*\r\nconst MyPostsConteiner = (props) => {\r\n   return (\r\n      <StoreContext.Consumer>\r\n         {\r\n         (store)=>{\r\n            let state=store.getState()                                  //локальный стейт передаем весь стор\r\n\r\n            let addPost = () => {              //добавление поста\r\n               store.dispatch(addPostActionCreator())\r\n            }\r\n\r\n            let onPostChange = (text) => {                    //обновление поста\r\n               let action = updateNewPostTextActionCreator(text)\r\n               store.dispatch(action)\r\n            }\r\n            return <MyPosts \r\n               updateNewPostText={onPostChange}\r\n               addPost={addPost} \r\n               posts={state.profilePage.posts} \r\n               newPostText={state.profilePage.newPostText}\r\n            />\r\n         }\r\n      }\r\n      </StoreContext.Consumer>\r\n   )\r\n}*/\n\nlet mapStateToProps = state => {\n  //функция из пакета'react-redux' для передачи state\n  return {\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  //функция из пакета'react-redux' для передачи dispatch\n  return {\n    addPost: () => {\n      dispatch(addPostActionCreator());\n    },\n    updateNewPostText: text => {\n      dispatch(updateNewPostTextActionCreator(text));\n    }\n  };\n};\n\nconst MyPostsConteiner = connect(mapStateToProps, mapDispatchToProps)(MyPosts); //указываем (что передаем в props)(куда передаем)\n\nexport default MyPostsConteiner;","map":{"version":3,"sources":["/home/niko/projects/01-first-project/my-app/src/companents/Profile/MyPost/MyPostsContainer.jsx"],"names":["React","addPostActionCreator","updateNewPostTextActionCreator","MyPosts","connect","mapStateToProps","state","posts","profilePage","newPostText","mapDispatchToProps","dispatch","addPost","updateNewPostText","text","MyPostsConteiner"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,oBAAT,EAA+BC,8BAA/B,QAAqE,gCAArE;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,eAAe,GAAEC,KAAD,IAAS;AAA4B;AACtD,SAAM;AACHC,IAAAA,KAAK,EAAED,KAAK,CAACE,WAAN,CAAkBD,KADtB;AAEHE,IAAAA,WAAW,EAAEH,KAAK,CAACE,WAAN,CAAkBC;AAF5B,GAAN;AAKF,CAND;;AAQA,IAAIC,kBAAkB,GAAEC,QAAD,IAAY;AAAqB;AACrD,SAAM;AACHC,IAAAA,OAAO,EAAC,MAAI;AACTD,MAAAA,QAAQ,CAACV,oBAAoB,EAArB,CAAR;AACF,KAHE;AAIHY,IAAAA,iBAAiB,EAAEC,IAAD,IAAQ;AACvBH,MAAAA,QAAQ,CAACT,8BAA8B,CAACY,IAAD,CAA/B,CAAR;AACF;AANE,GAAN;AAQF,CATD;;AAYA,MAAMC,gBAAgB,GAAEX,OAAO,CAACC,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CP,OAA7C,CAAxB,C,CAAsF;;AAEtF,eAAeY,gBAAf","sourcesContent":["import React from 'react'\r\nimport { addPostActionCreator, updateNewPostTextActionCreator } from '../../../redux/profile-reducer'\r\nimport MyPosts from './MyPosts'\r\nimport { connect } from 'react-redux'\r\n\r\n/*\r\nconst MyPostsConteiner = (props) => {\r\n   return (\r\n      <StoreContext.Consumer>\r\n         {\r\n         (store)=>{\r\n            let state=store.getState()                                  //локальный стейт передаем весь стор\r\n\r\n            let addPost = () => {              //добавление поста\r\n               store.dispatch(addPostActionCreator())\r\n            }\r\n\r\n            let onPostChange = (text) => {                    //обновление поста\r\n               let action = updateNewPostTextActionCreator(text)\r\n               store.dispatch(action)\r\n            }\r\n            return <MyPosts \r\n               updateNewPostText={onPostChange}\r\n               addPost={addPost} \r\n               posts={state.profilePage.posts} \r\n               newPostText={state.profilePage.newPostText}\r\n            />\r\n         }\r\n      }\r\n      </StoreContext.Consumer>\r\n   )\r\n}*/\r\n\r\nlet mapStateToProps=(state)=>{                           //функция из пакета'react-redux' для передачи state\r\n   return{\r\n      posts: state.profilePage.posts,\r\n      newPostText: state.profilePage.newPostText\r\n   }\r\n   \r\n}\r\n\r\nlet mapDispatchToProps=(dispatch)=>{                    //функция из пакета'react-redux' для передачи dispatch\r\n   return{\r\n      addPost:()=>{\r\n         dispatch(addPostActionCreator())\r\n      },\r\n      updateNewPostText:(text)=>{\r\n         dispatch(updateNewPostTextActionCreator(text))\r\n      }\r\n   }\r\n}\r\n\r\n\r\nconst MyPostsConteiner =connect(mapStateToProps, mapDispatchToProps)(MyPosts)         //указываем (что передаем в props)(куда передаем)\r\n\r\nexport default MyPostsConteiner;"]},"metadata":{},"sourceType":"module"}